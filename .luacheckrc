std = {
  globals = { -- these globals can be set and accessed.
  },
  read_globals = { -- these globals can only be accessed.
    ---- Other
    "require",
    "class",
    -- -- Global
    "AddFOWViewer",
    "AngleDiff",
    "AppendToLogFile",
    "ApplyDamage",
    "AxisAngleToQuaternion",
    "CalcClosestPointOnEntityOBB",
    "CalcDistanceBetweenEntityOBB",
    "CalcDistanceToLineSegment2D",
    "CancelEntityIOEvents",
    "ClearTeamCustomHealthbarColor",
    "CreateEffect",
    "CreateHeroForPlayer",
    "CreateHTTPRequestScriptVM",
    "CreateItem",
    "CreateItemOnPositionForLaunch",
    "CreateItemOnPositionSync",
    "CreateModifierThinker",
    "CreateTempTree",
    "CreateTrigger",
    "CreateTriggerRadiusApproximate",
    "CreateUnitByName",
    "CreateUnitByNameAsync",
    "CreateUnitFromTable",
    "cvar_getf",
    "cvar_setf",
    "DebugBreak",
    "DebugDrawBox",
    "DebugDrawBoxDirection",
    "DebugDrawCircle",
    "DebugDrawClear",
    "DebugDrawLine",
    "DebugDrawLine_vCol",
    "DebugDrawScreenTextLine",
    "DebugDrawSphere",
    "DebugDrawText",
    "DebugScreenTextPretty",
    "DoCleaveAttack",
    "DoEntFire",
    "DoEntFireByInstanceHandle",
    "DoIncludeScript",
    "DoScriptAssert",
    "DoUniqueString",
    "EmitAnnouncerSound",
    "EmitAnnouncerSoundForPlayer",
    "EmitAnnouncerSoundForTeam",
    "EmitAnnouncerSoundForTeamOnLocation",
    "EmitGlobalSound",
    "EmitSoundOn",
    "EmitSoundOnClient",
    "EmitSoundOnLocationForAllies",
    "EmitSoundOnLocationWithCaster",
    "EntIndexToHScript",
    "ExecuteOrderFromTable",
    "ExponentialDecay",
    "FileToString",
    "FindClearSpaceForUnit",
    "FindUnitsInRadius",
    "FindUnitsInLine",
    "FireEntityIOInputNameOnly",
    "FireEntityIOInputString",
    "FireEntityIOInputVec",
    "FireGameEvent",
    "FireGameEventLocal",
    "FrameTime",
    "GetEntityIndexForTreeId",
    "GetFrameCount",
    "GetFrostyBoostAmount",
    "GetFrostyPointsForRound",
    "GetGoldFrostyBoostAmount",
    "GetGoldFrostyPointsForRound",
    "GetGroundHeight",
    "GetGroundPosition",
    "GetItemCost",
    "GetListenServerHost",
    "GetMapName",
    "GetMaxOutputDelay",
    "GetPhysAngularVelocity",
    "GetPhysVelocity",
    "GetSystemDate",
    "GetSystemTime",
    "GetTeamHeroKills",
    "GetTeamName",
    "GetTreeIdForEntityIndex",
    "GetWorldMaxX",
    "GetWorldMaxY",
    "GetWorldMinX",
    "GetWorldMinY",
    "InitLogFile",
    "IsClient",
    "IsDedicatedServer",
    "IsMarkedForDeletion",
    "IsServer",
    "IsValidEntity",
    "IsInToolsMode",
    "LimitPathingSearchDepth",
    "LinkLuaModifier",
    "ListenToGameEvent",
    "LoadKeyValues",
    "LoadKeyValuesFromString",
    "MakeStringToken",
    "MinimapEvent",
    "Msg",
    "PauseGame",
    "PlayerInstanceFromIndex",
    "PrecacheEntityFromTable",
    "PrecacheEntityListFromTable",
    "PrecacheItemByNameAsync",
    "PrecacheItemByNameSync",
    "PrecacheModel",
    "PrecacheResource",
    "PrecacheUnitByNameAsync",
    "PrecacheUnitByNameSync",
    "PrintLinkedConsoleMessage",
    "RandomFloat",
    "RandomInt",
    "RandomVector",
    "RegisterSpawnGroupFilterProxy",
    "ReloadMOTD",
    "RemoveSpawnGroupFilterProxy",
    "ResolveNPCPositions",
    "RollPercentage",
    "RotateOrientation",
    "RotatePosition",
    "RotateQuaternionByAxisAngle",
    "RotationDelta",
    "RotationDeltaAsAngularVelocity",
    "rr_AddDecisionRule",
    "rr_CommitAIResponse",
    "rr_GetResponseTargets",
    "rr_QueryBestResponse",
    "Say",
    "ScreenShake",
    "SendFrostivusTimeElapsedToGC",
    "SendFrostyPointsMessageToGC",
    "SendOverheadEventMessage",
    "SendToConsole",
    "SendToServerConsole",
    "SetOpvarFloatAll",
    "SetOpvarFloatPlayer",
    "SetPhysAngularVelocity",
    "SetQuestName",
    "SetQuestPhase",
    "SetRenderingEnabled",
    "SetTeamCustomHealthbarColor",
    "ShowCustomHeaderMessage",
    "ShowGenericPopup",
    "ShowGenericPopupToPlayer",
    "ShowMessage",
    "SpawnEntityFromTableSynchronous",
    "SpawnEntityGroupFromTable",
    "SpawnEntityListFromTableAsynchronous",
    "SpawnEntityListFromTableSynchronous",
    "SplineQuaternions",
    "SplineVectors",
    "StartSoundEvent",
    "StartSoundEventFromPosition",
    "StartSoundEventFromPositionReliable",
    "StartSoundEventFromPositionUnreliable",
    "StartSoundEventReliable",
    "StartSoundEventUnreliable",
    "StopEffect",
    "StopListeningToAllGameEvents",
    "StopListeningToGameEvent",
    "StopSoundEvent",
    "StopSoundOn",
    "StringToFile",
    "Time",
    "TraceCollideable",
    "TraceHull",
    "TraceLine",
    "UnitFilter",
    "UnloadSpawnGroup",
    "UnloadSpawnGroupByHandle",
    "UpdateEventPoints",
    "UTIL_MessageText",
    "UTIL_MessageText_WithContext",
    "UTIL_MessageTextAll",
    "UTIL_MessageTextAll_WithContext",
    "UTIL_Remove",
    "UTIL_RemoveImmediate",
    "UTIL_ResetMessageText",
    "UTIL_ResetMessageTextAll",
    "VectorToAngles",
    "Warning",
    "CDOTA_PlayerResource",
    "
    "
    ---- Constants
    -- AbilityLearnResult_t
    "ABILITY_CAN_BE_UPGRADED",
    "ABILITY_CANNOT_BE_UPGRADED_NOT_UPGRADABLE",
    "ABILITY_CANNOT_BE_UPGRADED_AT_MAX",
    "ABILITY_CANNOT_BE_UPGRADED_REQUIRES_LEVEL",
    "ABILITY_NOT_LEARNABLE",
    -- Attributes
    "DOTA_ATTRIBUTE_INVALID",
    "DOTA_ATTRIBUTE_STRENGTH",
    "DOTA_ATTRIBUTE_AGILITY",
    "DOTA_ATTRIBUTE_INTELLECT",
    "DOTA_ATTRIBUTE_MAX",
    -- DAMAGE_TYPES
    "DAMAGE_TYPE_NONE",
    "DAMAGE_TYPE_PHYSICAL",
    "DAMAGE_TYPE_MAGICAL",
    "DAMAGE_TYPE_PURE",
    "DAMAGE_TYPE_ALL",
    "DAMAGE_TYPE_HP_REMOVAL",
    -- DOTAAbilitySpeakTrigger_t
    "DOTA_ABILITY_SPEAK_START_ACTION_PHASE",
    "DOTA_ABILITY_SPEAK_CAST",
    -- DOTADamageFlag_t
    "DOTA_DAMAGE_FLAG_NONE",
    "DOTA_DAMAGE_FLAG_IGNORES_MAGIC_ARMOR",
    "DOTA_DAMAGE_FLAG_IGNORES_PHYSICAL_ARMOR",
    "DOTA_DAMAGE_FLAG_BYPASSES_INVULNERABILITY",
    "DOTA_DAMAGE_FLAG_BYPASSES_BLOCK",
    "DOTA_DAMAGE_FLAG_REFLECTION",
    "DOTA_DAMAGE_FLAG_HPLOSS",
    "DOTA_DAMAGE_FLAG_NO_DIRECTOR_EVENT",
    "DOTA_DAMAGE_FLAG_NON_LETHAL",
    "DOTA_DAMAGE_FLAG_USE_COMBAT_PROFICIENCY",
    "DOTA_DAMAGE_FLAG_NO_DAMAGE_MULTIPLIERS",
    -- DOTAHUDVisibility_t
    "DOTA_HUD_VISIBILITY_TOP_TIMEOFDAY",
    "DOTA_HUD_VISIBILITY_TOP_HEROES",
    "DOTA_HUD_VISIBILITY_TOP_SCOREBOARD",
    "DOTA_HUD_VISIBILITY_ACTION_PANEL",
    "DOTA_HUD_VISIBILITY_ACTION_MINIMAP",
    "DOTA_HUD_VISIBILITY_INVENTORY_PANEL",
    "DOTA_HUD_VISIBILITY_INVENTORY_SHOP",
    "DOTA_HUD_VISIBILITY_INVENTORY_ITEMS",
    "DOTA_HUD_VISIBILITY_INVENTORY_QUICKBUY",
    "DOTA_HUD_VISIBILITY_INVENTORY_COURIER",
    "DOTA_HUD_VISIBILITY_INVENTORY_PROTECT",
    "DOTA_HUD_VISIBILITY_INVENTORY_GOLD",
    "DOTA_HUD_VISIBILITY_SHOP_SUGGESTEDITEMS",
    "DOTA_HUD_VISIBILITY_COUNT",
    -- DOTAInventoryFlags_t
    "DOTA_INVENTORY_ALLOW_NONE",
    "DOTA_INVENTORY_ALLOW_MAIN",
    "DOTA_INVENTORY_ALLOW_STASH",
    "DOTA_INVENTORY_ALL_ACCESS",
    "DOTA_INVENTORY_ALLOW_DROP_ON_GROUND",
    "DOTA_INVENTORY_ALLOW_DROP_AT_FOUNTAIN",
    "DOTA_INVENTORY_LIMIT_DROP_ON_GROUND",
    -- DOTAMinimapEvent_t
    "DOTA_MINIMAP_EVENT_ANCIENT_UNDER_ATTACK",
    "DOTA_MINIMAP_EVENT_BASE_UNDER_ATTACK",
    "DOTA_MINIMAP_EVENT_BASE_GLYPHED",
    "DOTA_MINIMAP_EVENT_TEAMMATE_UNDER_ATTACK",
    "DOTA_MINIMAP_EVENT_TEAMMATE_TELEPORTING",
    "DOTA_MINIMAP_EVENT_TEAMMATE_DIED",
    "DOTA_MINIMAP_EVENT_TUTORIAL_TASK_ACTIVE",
    "DOTA_MINIMAP_EVENT_TUTORIAL_TASK_FINISHED",
    "DOTA_MINIMAP_EVENT_HINT_LOCATION",
    "DOTA_MINIMAP_EVENT_ENEMY_TELEPORTING",
    "DOTA_MINIMAP_EVENT_CANCEL_TELEPORTING",
  }
}
exclude_files = {
  "game/scripts/vscripts/statcollection" -- we just ignore getdotastats
}
